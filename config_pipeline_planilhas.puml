@startuml

title Arquitetura - Ingestão Planilhas Eletrônicas - Pipeline
start
:Linked Service e Dataset configurados;
card "Configuração Pipeline" { 
:Pipeline ; 
:Create Folder;
:Clonar Pipeline pronto (modelo) e renomear;
:Parameters
Default value: CANALSEGURO;
note left
É igual ao "Source Environment" da 
tabela de controle.
end note

note right
Tabela de controle
--
BusinessUnit 
DataBaseName
SchemaName
TableName
ProcessSucess
ProcessEnable
Zone (LANDING para BRONZE)
LoadingType (APPEND)
end note
note left
Possui política de retry em "Settings"
end note

card "Pipeline" { 
    card "SetVariable"  {
:SetCurrentTime;
}

card  "SetVariable"  {
:SetTimestamp;
}
card  "Notebook"  {
:RestartLoadingControl;
}
card  "Lookup"  {
:GetAllTables;
}
note 
Importante. Retorna um .json com
as tabelas. 
Usa tabela de controle.
end note

card  "ForEach"  {
:ForEachTables;
} 
card SetCurrentDateForEachEnd {

:SetCurrentDateForEach;

card "Notebook"{
    :UpdateStartDate;
}

:CopyData;
note 
Source: planilhas excel, formato .xlsx (pre_landing_zone);
Sink: parquet (landing_zone) ; 
folderName: @query na tabela de controle de carga ; 
fileName:: @query na tabela de controle de carga .
end note

if (UpdateEndDateSucess) then (no)
:UpdateEndDateSucessError;
stop
else ()
:ForEachEnd;

endif
} 
card  "Notebook"  {
:LoadLandingToBronze
-> Campo de seleção do DataSet (SourceEnvironment)
* Uso do RunNotebooks (paralelismo)
-> Mais campos de config em RunNotebooks
-> Failues gravadas em pasta FAILURES/;
note left 
Execução em paralelo de notebooks.
Controle de duplicatas. Erros aparecem apenas no registro da tabela de controle. 
end note
}
card  "Wait"  {
:EndPipeline;
}
}
card "Datalake" {
    :Bronze;
}

end
@enduml 